{"version":3,"sources":["i18n.ts","utils/styles.ts","components/Spinner/styles.ts","components/Spinner/index.ts","components/Spinner/Spinner.tsx","utils/variables.ts","hooks/useFetch.ts","hooks/useGetCollectables.ts","components/LanguageSwitcher/styles.ts","components/LanguageSwitcher/index.ts","components/LanguageSwitcher/LanguageSwitcher.tsx","components/TopButton/styles.ts","components/TopButton/index.ts","components/TopButton/TopButton.tsx","pages/MainList/styles.ts","pages/MainList/index.ts","pages/MainList/MainList.tsx","hooks/useGetCollectable.ts","pages/Detail/styles.ts","pages/Detail/Detail.tsx","pages/Detail/index.ts","router/RootRouter/index.ts","router/RootRouter/RootRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i18n","use","Backend","initReactI18next","init","backend","loadPath","fallbackLng","lng","interpolation","escapeValue","FlexCenter","css","CircularProgressWrapper","styled","div","wrapperHeight","Spinner","isLoading","props","CircularProgress","disableShrink","className","API_HOST","process","useFetch","path","useState","setIsLoading","isDone","setIsDone","isErr","setIsErr","undefined","statusCode","setStatusCode","data","setData","pathRef","useRef","current","reset","initData","fetch","axios","get","then","response","status","catch","err","code","message","replace","codeNumber","Number","finally","useGetCollectables","page","accumulatedCollectables","setAccumulatedCollectables","isFinished","setIsFinished","query","qs","stringify","owner","limit","offset","addQueryPrefix","orinReset","result","useEffect","assets","r","length","LangBtnWrapper","LanguageSwitcher","prop","useTranslation","showLangNav","setShowLangNav","langBtnRef","React","closeLangNav","switchLang","lang","changeLanguage","IconButton","ref","onClick","fontSize","Popper","open","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","selected","language","FabWrapper","TopButton","show","Zoom","in","unmountOnExit","Fab","size","color","AppWrapper","List","ListItem","Card","MainList","push","history","t","setPage","collectables","listRef","scrollTo","p","showTopBtn","setShowTopBtn","showSnackbar","setShowSnackbar","onListScroll","useCallback","clientHeight","scrollTop","scrollHeight","list","addEventListener","removeEventListener","Typography","align","variant","component","map","c","i","CardActionArea","param","contract_address","asset_contract","address","token_id","CardMedia","image","image_url","title","name","CardContent","id","Snackbar","onClose","TransitionComponent","Fade","autoHideDuration","display","top","left","behavior","Header","Img","img","TextWrapper","ButtonBlock","collection","permalink","Detail","match","params","useGetCollectable","src","alt","description","Button","window","RootRouter","exact","to","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.2fc2bb55.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\n\ni18n\n  // 使用 i18next-http-backend\n  .use(Backend)\n  // 將 i18next 傳入 react-i18next 裡面\n  .use(initReactI18next)\n  // 實例化 initReactI18next\n  .init({\n    backend: {\n      //網頁載入時去下載語言檔的位置\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n    },\n    // 當目前的語言檔找不到對應的字詞時，會用 fallbackLng (en) 作為預設語言\n    fallbackLng: 'en',\n    // 預設語言\n    lng: 'en',\n    interpolation: {\n      // 是否要讓字詞 escaped 來防止 xss 攻擊，這裡因為 React.js 已經做了，就設成 false即可\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import { css } from 'styled-components';\n\nexport const FlexCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nimport { FlexCenter } from 'utils/styles';\n\nimport { SpinnerType } from './types';\n\nexport const CircularProgressWrapper = styled.div<SpinnerType>`\n  ${FlexCenter}\n  ${({ wrapperHeight }) => wrapperHeight && `height: ${wrapperHeight};`}\n\n  .circular {\n    margin: 20px 0;\n    color: thistle;\n  }\n`;\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import React, { FC } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { SpinnerType } from './types';\nimport { CircularProgressWrapper } from './styles';\n\nconst Spinner: FC<SpinnerType> = ({ isLoading = true, ...props }) => {\n  return isLoading ? (\n    <CircularProgressWrapper {...props}>\n      <CircularProgress disableShrink className=\"circular\" />\n    </CircularProgressWrapper>\n  ) : null;\n};\n\nexport default Spinner;\n","// env\nexport const API_HOST = process.env.REACT_APP_API_HOST;\n\n// settings\nexport const limit = 20;\nexport const owner = '0x960DE9907A2e2f5363646d48D7FB675Cd2892e91';\n\n// breakpoint\nexport const TABLET_MIN = '1024px';\nexport const PAD_MAX = '1023px';\nexport const PAD_MIN = '768px';\nexport const MOBILE_MAX = '767px';\n","import { useState, useRef } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nimport { API_HOST } from 'utils/variables';\n\ntype UseFetchParameter = {\n  path: string;\n};\n\ntype UseFetchRes<D> = {\n  isLoading: boolean;\n  isDone: boolean;\n  isErr: boolean;\n  data: undefined | D;\n  statusCode: undefined | number;\n  fetch: VoidFunction;\n  reset: VoidFunction;\n};\n\nconst useFetch = <D>({ path }: UseFetchParameter): UseFetchRes<D> => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isDone, setIsDone] = useState<boolean>(false);\n  const [isErr, setIsErr] = useState<boolean>(false);\n  const [statusCode, setStatusCode] = useState<undefined | number>(undefined);\n  const [data, setData] = useState<undefined | D>(undefined);\n\n  // due to the debounce function, the fetch function couldn't get the newest path\n  const pathRef = useRef(path);\n  pathRef.current = path;\n\n  const fetch = ({ initData } = { initData: false }) => {\n    reset({ initData });\n    setIsLoading(true);\n\n    axios\n      .get(`${API_HOST}${pathRef.current}`)\n      .then(function (response: AxiosResponse<D>) {\n        setData(response.data);\n        setStatusCode(response.status);\n      })\n      .catch((err) => {\n        const code = err.message.replace('Request failed with status code ', '');\n        const codeNumber = Number(code);\n        if (code == codeNumber) setStatusCode(codeNumber);\n        setIsErr(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setIsDone(true);\n      });\n  };\n\n  const reset = ({ initData } = { initData: true }) => {\n    setIsLoading(false);\n    setIsDone(false);\n    setIsErr(false);\n    setStatusCode(undefined);\n    if (initData) setData(undefined);\n  };\n\n  return {\n    isLoading,\n    isDone,\n    isErr,\n    data,\n    statusCode,\n    fetch,\n    reset,\n  };\n};\n\nexport default useFetch;\n","import { useState, useEffect } from 'react';\nimport qs from 'qs';\n\nimport { limit, owner } from 'utils/variables';\nimport useFetch from 'hooks/useFetch';\n\ntype CollectablesResponse = any;\n\ntype UseGetCollectablesParameter = {\n  page: number;\n};\n\nconst useGetCollectables = ({ page }: UseGetCollectablesParameter) => {\n  const [accumulatedCollectables, setAccumulatedCollectables] = useState<\n    CollectablesResponse['assets']\n  >([]);\n  const [isFinished, setIsFinished] = useState(false);\n\n  const query = qs.stringify(\n    {\n      owner,\n      limit,\n      offset: limit * (page - 1),\n    },\n    { addQueryPrefix: true },\n  );\n\n  const { data = [], reset: orinReset, ...result } = useFetch<CollectablesResponse>({\n    path: `/assets${query}`,\n  });\n\n  useEffect(() => {\n    if (result.isDone) {\n      if (page === 1) {\n        setAccumulatedCollectables(data.assets);\n      } else {\n        setAccumulatedCollectables((r: any) => [...r, ...data.assets]);\n      }\n      if (data.assets.length < 20) setIsFinished(true);\n    }\n  }, [result.isDone]);\n\n  const reset = () => {\n    orinReset();\n    setAccumulatedCollectables([]);\n  };\n\n  return {\n    data: accumulatedCollectables,\n    isFinished,\n    reset,\n    ...result,\n  };\n};\n\nexport default useGetCollectables;\n","import styled from 'styled-components';\n\nexport const LangBtnWrapper = styled.div`\n  z-index: 999;\n  position: fixed;\n  right: 5px;\n  top: 5px;\n`;\n","import LanguageSwitcher from './LanguageSwitcher';\n\nexport default LanguageSwitcher;\n","import React, { FC, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Popper,\n  Grow,\n  Paper,\n  ClickAwayListener,\n  MenuList,\n  MenuItem,\n  IconButton,\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nimport { LangBtnWrapper } from './styles';\n\nconst LanguageSwitcher: FC = (prop) => {\n  const { i18n } = useTranslation();\n\n  const [showLangNav, setShowLangNav] = useState(false);\n\n  const langBtnRef = React.useRef(null);\n\n  const openLangNav = () => setShowLangNav(true);\n  const closeLangNav = () => setShowLangNav(false);\n\n  const switchLang = (lang: 'en' | 'zh-tw') => () => {\n    i18n.changeLanguage(lang);\n    closeLangNav();\n  };\n\n  return (\n    <LangBtnWrapper {...prop}>\n      <IconButton ref={langBtnRef} onClick={openLangNav}>\n        <LanguageIcon fontSize=\"small\" />\n      </IconButton>\n\n      <Popper\n        open={showLangNav}\n        anchorEl={langBtnRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={closeLangNav}>\n                <MenuList>\n                  <MenuItem onClick={switchLang('en')} selected={i18n.language === 'en'}>\n                    English\n                  </MenuItem>\n                  <MenuItem onClick={switchLang('zh-tw')} selected={i18n.language === 'zh-tw'}>\n                    繁體中文\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </LangBtnWrapper>\n  );\n};\n\nexport default LanguageSwitcher;\n","import styled from 'styled-components';\n\nexport const FabWrapper = styled.div`\n  position: fixed;\n  bottom: 40px;\n  right: 25px;\n`;\n","import TopButton from './TopButton';\n\nexport default TopButton;\n","import React, { FC } from 'react';\nimport { Fab, Zoom } from '@material-ui/core';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nimport { BackToTopButtonType } from './types';\nimport { FabWrapper } from './styles';\n\nconst TopButton: FC<BackToTopButtonType> = ({ show = true, onClick, ...props }) => {\n  return (\n    <Zoom in={show} unmountOnExit>\n      <FabWrapper>\n        <Fab size=\"small\" color=\"secondary\" onClick={onClick}>\n          <NavigationIcon />\n        </Fab>\n      </FabWrapper>\n    </Zoom>\n  );\n};\n\nexport default TopButton;\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\n\nimport { MOBILE_MAX, TABLET_MIN } from 'utils/variables';\n\nexport const AppWrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  padding-top: 25px;\n`;\n\nexport const List = styled.div`\n  margin-top: 25px;\n  flex: 1;\n  overflow: scroll;\n`;\n\nexport const ListItem = styled(Card)`\n  width: 46%;\n  margin: 2%;\n  color: #000;\n  background-color: whitesmoke;\n  text-decoration: none;\n  display: inline-block;\n\n  .action-area {\n    padding: 25px;\n  }\n\n  &:visited {\n    color: #999;\n  }\n\n  &:hover {\n    color: #fff;\n    background-color: thistle;\n\n    &:visited {\n      background-color: #d2aed2;\n    }\n  }\n\n  .image {\n    height: 300px;\n\n    @media (max-width: ${MOBILE_MAX}) {\n      height: 140px;\n    }\n\n    @media (min-width: ${TABLET_MIN}) {\n      height: 400px;\n    }\n  }\n`;\n","import MainList from './MainList';\n\nexport default MainList;\n","import React, { FC, useState, useCallback, useRef, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Typography,\n  Snackbar,\n  Fade,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n} from '@material-ui/core';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport useGetCollectables from 'hooks/useGetCollectables';\nimport LanguageSwitcher from 'components/LanguageSwitcher';\nimport Spinner from 'components/Spinner';\nimport TopButton from 'components/TopButton';\n\nimport { AppWrapper, List, ListItem } from './styles';\n\nconst MainList: FC<RouteComponentProps> = ({ history: { push } }) => {\n  /* i18n */\n\n  const { t } = useTranslation();\n\n  /* main data */\n  const [page, setPage] = useState(1);\n\n  const { isLoading, isDone, data: collectables, isFinished, fetch } = useGetCollectables({\n    page,\n  });\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  useEffect(() => {\n    if (isDone) {\n      if (page === 1) {\n        listRef.current?.scrollTo(0, 0);\n      }\n      setPage((p) => p + 1);\n    }\n  }, [isDone]);\n\n  /* scroll */\n\n  const [showTopBtn, setShowTopBtn] = useState(false);\n\n  const [showSnackbar, setShowSnackbar] = useState(false);\n\n  const closeSnackbar = () => setShowSnackbar(false);\n\n  const listRef = useRef<HTMLDivElement>(null);\n\n  const onTopBottomClick = (): void =>\n    listRef.current?.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n\n  const onListScroll = useCallback(() => {\n    if (!listRef.current) return;\n\n    // clientHeight + scrollTop = scrollHeight\n    const { clientHeight, scrollTop, scrollHeight } = listRef.current;\n\n    if (!isLoading && scrollTop + clientHeight >= scrollHeight) {\n      if (isFinished) setShowSnackbar(true);\n      else fetch();\n    }\n\n    if (scrollTop > 100) setShowTopBtn(true);\n    else setShowTopBtn(false);\n  }, [listRef, isLoading, isFinished, fetch]);\n\n  useEffect(() => {\n    const list = listRef.current;\n    if (list) list.addEventListener('scroll', onListScroll);\n    return () => {\n      if (list) list.removeEventListener('scroll', onListScroll);\n    };\n  }, [onListScroll]);\n\n  /* others */\n\n  const goDetail = (param: { contract_address: string; token_id: string }) => () =>\n    push(`/detail/${param.contract_address}/${param.token_id}`);\n\n  return (\n    <AppWrapper>\n      <Typography align=\"center\" variant=\"h3\" component=\"h1\">\n        {t('heading')}\n      </Typography>\n\n      <LanguageSwitcher />\n\n      <List ref={listRef}>\n        {collectables.map((c: any, i: number) => (\n          <ListItem key={`${c.id}${i}`}>\n            <CardActionArea\n              className=\"action-area\"\n              onClick={goDetail({\n                contract_address: c.asset_contract.address,\n                token_id: c.token_id,\n              })}\n            >\n              <CardMedia image={c.image_url} title={c.name} className=\"image\" />\n              <CardContent>\n                <Typography component=\"h5\" align=\"center\">\n                  {c.name}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </ListItem>\n        ))}\n\n        <Spinner isLoading={isLoading} />\n\n        <Snackbar\n          open={showSnackbar}\n          onClose={closeSnackbar}\n          TransitionComponent={Fade}\n          autoHideDuration={1000}\n        >\n          <Typography variant=\"overline\" display=\"block\">\n            {t('noMoreData')}\n          </Typography>\n        </Snackbar>\n\n        <TopButton show={showTopBtn} onClick={onTopBottomClick} />\n      </List>\n    </AppWrapper>\n  );\n};\n\nexport default MainList;\n","import useFetch from 'hooks/useFetch';\n\ntype CollectablesResponse = any;\n\ntype UseGetCollectablesParameter = {\n  contract_address: string;\n  token_id: string;\n};\n\nconst useGetCollectables = ({ contract_address, token_id }: UseGetCollectablesParameter) => {\n  const result = useFetch<CollectablesResponse>({\n    path: `/asset/${contract_address}/${token_id}`,\n  });\n\n  return result;\n};\n\nexport default useGetCollectables;\n","import styled from 'styled-components';\nimport { Button as MaterialButton } from '@material-ui/core';\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 0 20px;\n\n  h2 {\n    margin: 20px 0;\n  }\n`;\n\nexport const ButtonBlock = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Typography, IconButton, Button } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport useGetCollectable from 'hooks/useGetCollectable';\nimport Spinner from 'components/Spinner';\n\nimport { RouterProps } from './type';\nimport { Header, Img, TextWrapper, ButtonBlock } from './styles';\n\nconst initData = {\n  image_url: '',\n  name: '',\n  collection: { name: '' },\n  permalink: '',\n};\n\nconst Detail: FC<RouteComponentProps<RouterProps>> = ({\n  match: {\n    params: { contract_address, token_id },\n  },\n  history: { push },\n}) => {\n  const { t } = useTranslation();\n\n  const { isDone, data = initData, fetch } = useGetCollectable({\n    contract_address,\n    token_id,\n  });\n\n  const goList = () => push('/list');\n\n  const onPermalinkClick = () => {\n    window.open(data.permalink);\n  };\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  if (!isDone) return <Spinner wrapperHeight=\"100vh\" />;\n\n  return (\n    <div>\n      <Header>\n        <IconButton onClick={goList}>\n          <ArrowBackIcon />\n        </IconButton>\n        <Typography align=\"center\" variant=\"h4\" component=\"h1\">\n          {data.collection.name}\n        </Typography>\n      </Header>\n\n      <Img src={data.image_url} alt={data.name} />\n\n      <TextWrapper>\n        <Typography align=\"center\" variant=\"h5\" component=\"h2\">\n          {data.name}\n        </Typography>\n        <Typography align=\"center\" variant=\"body1\" color=\"textSecondary\" component=\"p\">\n          {data.description}\n        </Typography>\n      </TextWrapper>\n\n      <ButtonBlock>\n        <Button onClick={onPermalinkClick}>{t('permalink')}</Button>\n      </ButtonBlock>\n    </div>\n  );\n};\n\nexport default Detail;\n","import Detail from './Detail';\n\nexport default Detail;\n","import RootRouter from './RootRouter';\n\nexport default RootRouter;\n","import React, { FC } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport MainList from 'pages/MainList';\nimport Detail from 'pages/Detail';\n\nconst RootRouter: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/detail/:contract_address/:token_id\" component={Detail} />\n        <Route path=\"/list\" component={MainList} />\n        <Redirect path=\"*\" to=\"/list\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default RootRouter;\n","import React, { Suspense } from 'react';\nimport 'fontsource-roboto';\nimport 'normalize.css';\n\nimport './i18n.ts';\nimport './index.css';\nimport Spinner from 'components/Spinner';\nimport RootRouter from 'router/RootRouter';\n\nfunction App() {\n  return (\n    <Suspense fallback={<Spinner wrapperHeight=\"100vh\" />}>\n      <RootRouter />\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById('root') as HTMLElement;\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}